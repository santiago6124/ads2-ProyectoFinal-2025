version: '3.8'

services:
  # Search API service
  search-api:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    environment:
      - ENVIRONMENT=development
      - SERVER_PORT=8080
      - SOLR_BASE_URL=http://solr:8983/solr
      - SOLR_COLLECTION=crypto_search
      - CACHE_MEMCACHED_HOSTS=memcached:11211
      - RABBITMQ_URL=amqp://guest:guest@rabbitmq:5672/
      - RABBITMQ_ENABLED=true
      - LOG_LEVEL=info
    depends_on:
      - solr
      - memcached
      - rabbitmq
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "wget --no-verbose --tries=1 --spider http://localhost:8080/api/v1/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    networks:
      - search-network

  # Apache Solr
  solr:
    image: solr:9.4
    ports:
      - "8983:8983"
    environment:
      - SOLR_HEAP=1g
    volumes:
      - solr_data:/var/solr
      - ./solr/configsets:/opt/solr/server/solr/configsets/crypto_search:ro
    command: >
      bash -c "
        solr-precreate crypto_search /opt/solr/server/solr/configsets/crypto_search
      "
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8983/solr/admin/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - search-network

  # Memcached
  memcached:
    image: memcached:1.6-alpine
    ports:
      - "11211:11211"
    command: memcached -m 256 -c 1024 -I 4m
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "echo stats | nc localhost 11211 | grep uptime || exit 1"]
      interval: 30s
      timeout: 5s
      retries: 3
    networks:
      - search-network

  # RabbitMQ
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
      - ./rabbitmq/definitions.json:/opt/definitions.json:ro
      - ./rabbitmq/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf:ro
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "rabbitmq-diagnostics -q ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - search-network

  # Prometheus (optional - for monitoring)
  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=168h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - search-network
    profiles:
      - monitoring

  # Grafana (optional - for monitoring)
  grafana:
    image: grafana/grafana:latest
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources:ro
    restart: unless-stopped
    networks:
      - search-network
    profiles:
      - monitoring

networks:
  search-network:
    driver: bridge

volumes:
  solr_data:
    driver: local
  rabbitmq_data:
    driver: local
  prometheus_data:
    driver: local
  grafana_data:
    driver: local